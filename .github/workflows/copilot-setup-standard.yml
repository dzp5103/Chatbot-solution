name: 🤖 Chatbot Solution - Standard Copilot Setup

on:
  workflow_dispatch:
    inputs:
      framework:
        description: 'Target chatbot framework'
        required: true
        type: choice
        options:
          - rasa
          - botpress
          - microsoft-bot
          - dialogflow
          - wit-ai
          - chatterbot
          - botman
          - botkit
      deployment_target:
        description: 'Deployment environment'
        required: false
        default: 'local'
        type: choice
        options:
          - local
          - docker
          - kubernetes
          - cloud-functions
          - self-hosted
  push:
    branches: [ main, develop ]
    paths:
      - 'frameworks/**'
      - 'deployment/**'
      - 'examples/**'
      - '.github/workflows/**'

env:
  NODE_VERSION: "20"
  PYTHON_VERSION: "3.11"
  WORKSPACE_PATH: "./chatbot-workspace"

jobs:
  setup-standard:
    name: 🚀 Standard Copilot Setup
    runs-on: ubuntu-latest
    timeout-minutes: 20

    steps:
      - name: 📦 Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"
          cache-dependency-path: |
            package-lock.json
            frameworks/*/package-lock.json

      - name: 🐍 Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: 'pip'

      - name: 🔍 Environment Validation
        run: |
          echo "🔍 Validating development environment..."
          node --version && npm --version && python --version
          echo "✅ Core tools validated"

      - name: 🛡️ Configure Copilot Agent
        run: |
          echo "🔧 Setting up Copilot configuration..."
          mkdir -p ~/.config/copilot-coding-agent
          cat << 'EOF' > ~/.config/copilot-coding-agent/config.json
          {
            "project_type": "chatbot_solutions",
            "firewall_disabled": true,
            "mcp_servers": {
              "filesystem": "@modelcontextprotocol/server-filesystem",
              "git": "@modelcontextprotocol/server-git"
            },
            "frameworks": [
              "rasa", "botpress", "microsoft-bot", "dialogflow",
              "wit-ai", "chatterbot", "botman", "botkit"
            ],
            "deployment_targets": ["docker", "kubernetes", "local", "cloud"],
            "testing": {
              "unit": "jest",
              "integration": "playwright",
              "conversation": "custom"
            },
            "automation": {
              "lint_fix": true,
              "test_generation": true,
              "doc_updates": true
            }
          }
          EOF
          echo "✅ Copilot configuration created"

      - name: 🌐 Install Browser Dependencies
        run: |
          echo "🌐 Installing Chrome for browser automation..."
          sudo apt-get update -qq
          wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
          echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" | sudo tee /etc/apt/sources.list.d/google.list
          sudo apt-get update -qq
          sudo apt-get install -y google-chrome-stable
          echo "✅ Chrome installed"

      - name: 📦 Install Core Dependencies
        run: |
          echo "📦 Installing essential packages..."
          npm install -g \
            @modelcontextprotocol/server-filesystem \
            @modelcontextprotocol/server-git \
            eslint \
            prettier \
            jest
          pip install --upgrade pip
          pip install \
            rasa[full] \
            spacy \
            transformers \
            pytest \
            black \
            flake8
          python -m spacy download en_core_web_sm
          echo "✅ Core dependencies installed"

      - name: 🚀 Setup Workspace
        run: |
          echo "🚀 Creating chatbot workspace..."
          mkdir -p ${{ env.WORKSPACE_PATH }}
          cd ${{ env.WORKSPACE_PATH }}
          
          # Create directory structure
          mkdir -p frameworks/{rasa,botpress,microsoft-bot,dialogflow,wit-ai,chatterbot,botman,botkit}
          mkdir -p deployment/{docker,kubernetes,cloud-functions,self-hosted,local}
          mkdir -p examples/{basic,advanced,industry-specific}
          mkdir -p testing/{unit,integration,conversation-flow}
          mkdir -p documentation/{setup,deployment,troubleshooting}
          mkdir -p tools/{automation,monitoring,browser-automation}
          
          # Create workspace config
          cat << 'EOF' > workspace.json
          {
            "name": "chatbot-solutions-workspace",
            "version": "1.0.0",
            "type": "chatbot-development",
            "frameworks_supported": [
              "rasa", "botpress", "microsoft-bot", "dialogflow",
              "wit-ai", "chatterbot", "botman", "botkit"
            ],
            "created": "$(date -u +%Y-%m-%dT%H:%M:%SZ)"
          }
          EOF
          echo "✅ Workspace created at ${{ env.WORKSPACE_PATH }}"

      - name: 🧪 Initialize Testing
        run: |
          echo "🧪 Setting up testing environment..."
          cd ${{ env.WORKSPACE_PATH }}
          
          # Create package.json for testing
          cat << 'EOF' > package.json
          {
            "name": "chatbot-solutions-testing",
            "version": "1.0.0",
            "scripts": {
              "test": "jest",
              "test:watch": "jest --watch",
              "lint": "eslint . --ext .js,.ts",
              "format": "prettier --write ."
            },
            "devDependencies": {
              "jest": "^29.0.0",
              "playwright": "^1.40.0",
              "puppeteer": "^21.0.0"
            }
          }
          EOF
          
          # Install testing dependencies
          npm install
          echo "✅ Testing environment ready"

      - name: ✅ Validation & Summary
        run: |
          echo "🔍 Final validation..."
          commands=("node" "npm" "python" "pip" "google-chrome")
          for cmd in "${commands[@]}"; do
            command -v "$cmd" >/dev/null && echo "✅ $cmd" || echo "❌ $cmd"
          done
          
          echo ""
          echo "🎉 Standard Copilot Setup Complete!"
          echo "📁 Workspace: ${{ env.WORKSPACE_PATH }}"
          echo "🤖 Framework: ${{ github.event.inputs.framework || 'all' }}"
          echo "🚀 Deployment: ${{ github.event.inputs.deployment_target || 'local' }}"
          echo "⏱️  Setup time: ~5-10 minutes"