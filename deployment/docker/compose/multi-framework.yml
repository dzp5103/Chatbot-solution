version: '3.8'

services:
  # Rasa Chatbot
  rasa-chatbot:
    build: ../../frameworks/rasa
    ports:
      - "5005:5005"
    environment:
      - RASA_MODEL_PATH=/app/models
      - RASA_ACTION_ENDPOINT=http://rasa-actions:5055/webhook
    volumes:
      - rasa_models:/app/models
      - rasa_logs:/app/logs
    depends_on:
      - rasa-actions
      - postgres
    networks:
      - chatbot-network
    restart: unless-stopped

  rasa-actions:
    build: ../../frameworks/rasa
    ports:
      - "5055:5055"
    command: ["rasa", "run", "actions", "--port", "5055"]
    environment:
      - DATABASE_URL=postgresql://chatbot:password@postgres:5432/chatbot
    depends_on:
      - postgres
    networks:
      - chatbot-network
    restart: unless-stopped

  # Botpress Chatbot
  botpress-chatbot:
    build: ../../frameworks/botpress
    ports:
      - "3000:3000"
    environment:
      - DATABASE_URL=postgres://chatbot:password@postgres:5432/botpress
      - BP_CONFIG_HTTPSERVER_HOST=0.0.0.0
      - BP_CONFIG_HTTPSERVER_PORT=3000
    volumes:
      - botpress_data:/botpress/data
    depends_on:
      - postgres
    networks:
      - chatbot-network
    restart: unless-stopped

  # Microsoft Bot Framework
  microsoft-bot:
    build: ../../frameworks/microsoft-bot
    ports:
      - "3978:3978"
    environment:
      - MicrosoftAppId=${MICROSOFT_APP_ID}
      - MicrosoftAppPassword=${MICROSOFT_APP_PASSWORD}
      - DATABASE_URL=postgresql://chatbot:password@postgres:5432/msbot
    depends_on:
      - postgres
    networks:
      - chatbot-network
    restart: unless-stopped

  # Shared Database
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: chatbot
      POSTGRES_USER: chatbot
      POSTGRES_PASSWORD: password
      POSTGRES_MULTIPLE_DATABASES: rasa,botpress,msbot,dialogflow
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-multiple-databases.sh:/docker-entrypoint-initdb.d/init-multiple-databases.sh:ro
    networks:
      - chatbot-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U chatbot"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis Cache
  redis:
    image: redis:7-alpine
    volumes:
      - redis_data:/data
    networks:
      - chatbot-network
    restart: unless-stopped
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - nginx_logs:/var/log/nginx
    depends_on:
      - rasa-chatbot
      - botpress-chatbot
      - microsoft-bot
    networks:
      - chatbot-network
    restart: unless-stopped

  # Monitoring
  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    networks:
      - chatbot-network
    restart: unless-stopped

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana:/etc/grafana/provisioning:ro
    depends_on:
      - prometheus
    networks:
      - chatbot-network
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
  rasa_models:
  rasa_logs:
  botpress_data:
  nginx_logs:
  prometheus_data:
  grafana_data:

networks:
  chatbot-network:
    driver: bridge